/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.phoneshop.view;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lk.ijse.phoneshop.common.IdGenerator;
import lk.ijse.phoneshop.controller.BatchController;
import lk.ijse.phoneshop.controller.CustomerOrderController;
import lk.ijse.phoneshop.controller.CustomerOrderDetailController;
import lk.ijse.phoneshop.controller.CustomerRetrunController;
import lk.ijse.phoneshop.controller.SupplierOrderController;
import lk.ijse.phoneshop.controller.SupplierReturnController;
import lk.ijse.phoneshop.core.dto.BatchDTO;
import lk.ijse.phoneshop.core.dto.CustomerOrderDTO;
import lk.ijse.phoneshop.core.dto.CustomerOrderDetailDTO;
import lk.ijse.phoneshop.core.dto.CustomerReturnDTO;
import lk.ijse.phoneshop.core.dto.SupplierOrderDTO;
import lk.ijse.phoneshop.core.dto.SupplierReturnDTO;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author HP
 */
public class ReturnItem extends javax.swing.JInternalFrame {

    /**
     * Creates new form ReturnItem
     */
    private CustomerOrderDetailController orderDetailController;

    public ReturnItem() {
        initComponents();
        orderDetailController = new CustomerOrderDetailController();
        loadDate();
        loadReturnId();
        //getBatch();
        loadSupplierReturnItem();
        loadSupplierReturnBatch();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        jXLabel8 = new org.jdesktop.swingx.JXLabel();
        jXLabel9 = new org.jdesktop.swingx.JXLabel();
        txtDate = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        txtItCode = new javax.swing.JTextField();
        txtCustNic = new javax.swing.JTextField();
        txtCustOrderId = new javax.swing.JTextField();
        cmbBatchId = new javax.swing.JComboBox<>();
        jXLabel10 = new org.jdesktop.swingx.JXLabel();
        jXLabel11 = new org.jdesktop.swingx.JXLabel();
        jXLabel13 = new org.jdesktop.swingx.JXLabel();
        jXLabel14 = new org.jdesktop.swingx.JXLabel();
        jXLabel15 = new org.jdesktop.swingx.JXLabel();
        jXLabel16 = new org.jdesktop.swingx.JXLabel();
        jXLabel17 = new org.jdesktop.swingx.JXLabel();
        cmbSBatchId = new org.jdesktop.swingx.JXComboBox();
        txtReturnId = new javax.swing.JTextField();
        txtsQtyOnHand = new javax.swing.JTextField();
        txtsQty = new javax.swing.JTextField();
        txtsSupReturnId = new javax.swing.JTextField();
        txtsSupOrderId = new javax.swing.JTextField();
        jXLabel19 = new org.jdesktop.swingx.JXLabel();
        txtSDate = new javax.swing.JTextField();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        txtsItemCode = new javax.swing.JTextField();
        jXLabel21 = new org.jdesktop.swingx.JXLabel();
        txtsSupId = new javax.swing.JTextField();
        jXLabel18 = new org.jdesktop.swingx.JXLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jXLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jXLabel1.setOpaque(true);
        jPanel1.add(jXLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 10, 380));

        jXLabel2.setText("Return Out");
        jXLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPanel1.add(jXLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 20, 120, 30));

        jXLabel3.setText("Date");
        jXLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 70, 30));

        jXLabel4.setText("Item Code");
        jXLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 120, 20));

        jXLabel5.setText("Batch ID");
        jXLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 90, 20));

        jXLabel6.setText("Customer NIC");
        jXLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 110, 20));

        jXLabel7.setText("Customer Order ID");
        jXLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 120, 20));

        jXLabel8.setText("Date");
        jXLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, 70, 30));

        jXLabel9.setText("Return Qty");
        jXLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 100, 30));
        jPanel1.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 170, 30));

        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        jPanel1.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 80, 30));
        jPanel1.add(txtItCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 120, 30));
        jPanel1.add(txtCustNic, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 170, 30));

        txtCustOrderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustOrderIdActionPerformed(evt);
            }
        });
        txtCustOrderId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustOrderIdKeyReleased(evt);
            }
        });
        jPanel1.add(txtCustOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 120, 30));

        cmbBatchId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBatchIdActionPerformed(evt);
            }
        });
        jPanel1.add(cmbBatchId, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 120, 30));

        jXLabel10.setText("Return In");
        jXLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPanel1.add(jXLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 120, 30));

        jXLabel11.setText("Return ID");
        jXLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 100, 20));

        jXLabel13.setText("Item Code");
        jXLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 260, 70, 30));

        jXLabel14.setText("Supplier ID");
        jXLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 180, 90, 30));

        jXLabel15.setText("Sup. Return ID");
        jXLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, 100, 30));

        jXLabel16.setText("Qty. On Hand");
        jXLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 330, 90, 30));

        jXLabel17.setText("Return Qty.");
        jXLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 300, 80, 20));
        jPanel1.add(cmbSBatchId, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, 140, 30));

        txtReturnId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReturnIdActionPerformed(evt);
            }
        });
        jPanel1.add(txtReturnId, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 120, 30));
        jPanel1.add(txtsQtyOnHand, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 340, 70, 30));

        txtsQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsQtyActionPerformed(evt);
            }
        });
        jPanel1.add(txtsQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, 70, 30));
        jPanel1.add(txtsSupReturnId, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 170, 30));

        txtsSupOrderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsSupOrderIdActionPerformed(evt);
            }
        });
        txtsSupOrderId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsSupOrderIdKeyReleased(evt);
            }
        });
        jPanel1.add(txtsSupOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 140, 170, 30));

        jXLabel19.setText("Supplier Order ID");
        jXLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, 110, 30));
        jPanel1.add(txtSDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 60, 170, 30));

        jXButton1.setText("Save & Print");
        jXButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jXButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jXButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 320, 140, 30));

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton7.setText("Add");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 90, 30));

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setText("Clear");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 100, 30));

        txtsItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsItemCodeActionPerformed(evt);
            }
        });
        jPanel1.add(txtsItemCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 170, 30));

        jXLabel21.setText("Batch ID");
        jXLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(jXLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 220, 70, 30));
        jPanel1.add(txtsSupId, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 180, 170, 30));

        jXLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 4));
        jPanel1.add(jXLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 840, 380));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCustOrderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustOrderIdActionPerformed

        try {
            CustomerOrderDTO customerOrderDTO = new CustomerOrderDTO(txtCustOrderId.getText());
            CustomerOrderDTO searchOrder = CustomerOrderController.searchCustomer(customerOrderDTO);
            if (searchOrder != null) {
                txtCustNic.setText(searchOrder.getCustomerNic());
            } else {
                JOptionPane.showMessageDialog(this, "No Entered this Order");
            }
            String cusOrderId = txtCustOrderId.getText();
            ArrayList<BatchDTO> getBatchItem = BatchController.getBatchList(cusOrderId);
            if (getBatchItem == null) {
                return;
            }
            for (BatchDTO batchDTO : getBatchItem) {
                cmbBatchId.addItem(batchDTO.getBid());

            }
            String batch = (String) cmbBatchId.getSelectedItem();
            System.out.println("aa" + batch);
            BatchDTO batchDTO = new BatchDTO(batch);
            BatchDTO getItem = BatchController.searchBatchDetails(batch);
            if (getItem != null) {
                txtItCode.setText(getItem.getItemCode());

            }
        } catch (Exception ex) {
            Logger.getLogger(ReturnItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtCustOrderIdActionPerformed

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtyActionPerformed

    private void txtsSupOrderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsSupOrderIdActionPerformed

        try {
            SupplierOrderDTO supplierOrderDTO = new SupplierOrderDTO(txtsSupOrderId.getText());
            SupplierOrderDTO searchSupplier = SupplierOrderController.searchSupplierOrder(supplierOrderDTO);
            if (searchSupplier != null) {
                txtsSupId.setText(searchSupplier.getSupNic());
            } else {
                JOptionPane.showMessageDialog(this, "No Entered this Order");
            }

            String supOrderId = txtsSupOrderId.getText();
            ArrayList<BatchDTO> getBatch = BatchController.getBatchList(supOrderId);
            for (BatchDTO batchDTO : getBatch) {
                cmbSBatchId.addItem(batchDTO.getBid());
            }
            String batch = (String) cmbSBatchId.getSelectedItem();
            BatchDTO batchDTO = new BatchDTO(batch);
            BatchDTO getItem = BatchController.searchBatchDetails(batch);
            if (getItem != null) {
                txtsItemCode.setText(getItem.getItemCode());
                txtsQtyOnHand.setText("" + getItem.getQty());
            }
        } catch (Exception ex) {
            Logger.getLogger(ReturnItem.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_txtsSupOrderIdActionPerformed

    private void txtReturnIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReturnIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReturnIdActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are You Sure Return this Item?");
        if (confirm == 0) {
            try {
                String cusReturnId = txtReturnId.getText();
                String cusOrderId = txtCustOrderId.getText();
                String batch = (String) cmbBatchId.getSelectedItem();
                int cusQty = Integer.parseInt(txtQty.getText());
                String date = txtDate.getText();
                CustomerReturnDTO customerReturnDTO = new CustomerReturnDTO(cusReturnId, cusOrderId, batch, cusQty, date);
                boolean isAdded = CustomerRetrunController.addRetuenItem(customerReturnDTO);
                if (isAdded) {
                    JOptionPane.showMessageDialog(this, "Added Successfully");
                } else {
                    JOptionPane.showMessageDialog(this, "Addded Failled");

                }
            } catch (Exception ex) {
                Logger.getLogger(ReturnItem.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void txtsQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsQtyActionPerformed

    private void txtCustOrderIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustOrderIdKeyReleased

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            loadBatch(txtCustOrderId.getText());
        }
    }//GEN-LAST:event_txtCustOrderIdKeyReleased

    private void cmbBatchIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBatchIdActionPerformed

    }//GEN-LAST:event_cmbBatchIdActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void txtsItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsItemCodeActionPerformed

    }//GEN-LAST:event_txtsItemCodeActionPerformed

    private void txtsSupOrderIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsSupOrderIdKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            loadBatch(txtsSupOrderId.getText());
        }
    }//GEN-LAST:event_txtsSupOrderIdKeyReleased

    private void jXButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton1ActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are You Sure Return this Item to Supplier?");
        if (confirm == 0) {
            try {
                String supReturnId = txtsSupReturnId.getText();
                String batchId = (String) cmbSBatchId.getSelectedItem();
                String supOrderId = txtsSupOrderId.getText();
                int returnQty = Integer.parseInt(txtsQty.getText());
                String date = txtDate.getText();
                SupplierReturnDTO supplierReturnDTO = new SupplierReturnDTO(supReturnId, batchId, supOrderId, returnQty, date);
                boolean isAdded = SupplierReturnController.addSupplierReturn(supplierReturnDTO);
                if (isAdded) {
                    JOptionPane.showMessageDialog(this, "Successfully Saved");
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Added Failled");
                }
            } catch (Exception ex) {
                Logger.getLogger(ReturnItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jXButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbBatchId;
    private org.jdesktop.swingx.JXComboBox cmbSBatchId;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JPanel jPanel1;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel10;
    private org.jdesktop.swingx.JXLabel jXLabel11;
    private org.jdesktop.swingx.JXLabel jXLabel13;
    private org.jdesktop.swingx.JXLabel jXLabel14;
    private org.jdesktop.swingx.JXLabel jXLabel15;
    private org.jdesktop.swingx.JXLabel jXLabel16;
    private org.jdesktop.swingx.JXLabel jXLabel17;
    private org.jdesktop.swingx.JXLabel jXLabel18;
    private org.jdesktop.swingx.JXLabel jXLabel19;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel21;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXLabel jXLabel5;
    private org.jdesktop.swingx.JXLabel jXLabel6;
    private org.jdesktop.swingx.JXLabel jXLabel7;
    private org.jdesktop.swingx.JXLabel jXLabel8;
    private org.jdesktop.swingx.JXLabel jXLabel9;
    private javax.swing.JTextField txtCustNic;
    private javax.swing.JTextField txtCustOrderId;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtItCode;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtReturnId;
    private javax.swing.JTextField txtSDate;
    private javax.swing.JTextField txtsItemCode;
    private javax.swing.JTextField txtsQty;
    private javax.swing.JTextField txtsQtyOnHand;
    private javax.swing.JTextField txtsSupId;
    private javax.swing.JTextField txtsSupOrderId;
    private javax.swing.JTextField txtsSupReturnId;
    // End of variables declaration//GEN-END:variables

    private void loadDate() {
        Date d1 = new Date();
        SimpleDateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        String date = df.format(d1);
        txtDate.setText(date);
        txtSDate.setText(date);
    }

    private void loadReturnId() {
        try {
            String returnId;
            returnId = IdGenerator.getNewID("customerreturn", "cReturnId", "CR");
            txtReturnId.setText(returnId);

        } catch (SQLException ex) {
            Logger.getLogger(ReturnItem.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReturnItem.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getBatch() {
        try {
            String batch = (String) cmbBatchId.getSelectedItem();
            BatchDTO batchdt = new BatchDTO(batch);
            BatchDTO getItem = BatchController.searchBatch(batchdt);
            if (getItem != null) {
                txtItCode.setText(getItem.getItemCode());

            }
        } catch (Exception ex) {
            Logger.getLogger(ReturnItem.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadBatch(String id) {

        try {

            ArrayList<CustomerOrderDetailDTO> batch = orderDetailController.getBatch();
            if (batch != null) {
                cmbBatchId.removeAllItems();
                for (CustomerOrderDetailDTO customerOrderDetailDTO : batch) {
                    if (customerOrderDetailDTO.getCustOrderId().equalsIgnoreCase(id)) {

                        cmbBatchId.addItem(customerOrderDetailDTO.getBatchId());
                    }
                }
            } else {

                JOptionPane.showMessageDialog(rootPane, "something went wrong....");

            }
        } catch (Exception ex) {
            Logger.getLogger(ReturnItem.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSupplierReturnItem() {
        try {
            String supReturn;
            supReturn = IdGenerator.getNewID("supplierreturn", "sReturnId", "SR");
            txtsSupReturnId.setText(supReturn);

        } catch (SQLException ex) {
            Logger.getLogger(ReturnItem.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReturnItem.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSupplierReturnBatch() {

    }
}
