/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.phoneshop.view;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import jdk.internal.org.xml.sax.InputSource;
import lk.ijse.phoneshop.common.IdGenerator;
import lk.ijse.phoneshop.controller.BatchController;
import lk.ijse.phoneshop.controller.ManageItemController;
import lk.ijse.phoneshop.controller.ManageSupplierController;
import lk.ijse.phoneshop.controller.ManageUserController;
import lk.ijse.phoneshop.controller.SupplierOrderController;
import lk.ijse.phoneshop.controller.SupplierOrderDetailController;
import lk.ijse.phoneshop.core.dto.BatchDTO;
import lk.ijse.phoneshop.core.dto.ItemDTO;
import lk.ijse.phoneshop.core.dto.ItemFormDTO;
import lk.ijse.phoneshop.core.dto.SupplierDTO;
import lk.ijse.phoneshop.core.dto.SupplierOrderDTO;
import lk.ijse.phoneshop.core.dto.SupplierOrderDetailDTO;
import lk.ijse.phoneshop.core.dto.SupplierPaymentDTO;
//import net.sf.jasperreports.engine.JRException;
//import net.sf.jasperreports.engine.JasperCompileManager;
//import net.sf.jasperreports.engine.JasperFillManager;
//import net.sf.jasperreports.engine.JasperPrint;
//import net.sf.jasperreports.engine.JasperReport;
//import net.sf.jasperreports.engine.data.JRTableModelDataSource;
//import net.sf.jasperreports.engine.util.JRLoader;
//import net.sf.jasperreports.swing.JRViewer;
//import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author HP
 */
public class SupplierOrder extends javax.swing.JFrame {

    private static String userId;
   /* private JasperReport jasperReport;
    private JasperPrint jasperPrint;
    private JRViewer jRViewer;*/

    /**
     * Creates new form New
     */
    public SupplierOrder(String id) {
        initComponents();
        userId = id;
        AutoCompleteDecorator.decorate(cmbSupId);
        AutoCompleteDecorator.decorate(cmbItem);
        OrderID();
        loadDate();
        getAllSupNic();
        loadGRN();
        getAllSupName();
        // searchBatch();
        searchItem();
        loadBatchDetails();
        loadJasper();

        lblUserID.setText(userId);

    }

    private void loadJasper() {
       /* try {
            jasperReport = (JasperReport) JRLoader.loadObject(SupplierOrder.class.getResourceAsStream("/lk/ijse/phoneshop/report/GRN.jasper"));
        } catch (JRException ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        txtQty = new javax.swing.JTextField();
        cmbSupName = new javax.swing.JComboBox<>();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        jXLabel8 = new org.jdesktop.swingx.JXLabel();
        cmbSupId = new javax.swing.JComboBox<>();
        txtDate = new javax.swing.JTextField();
        jXLabel9 = new org.jdesktop.swingx.JXLabel();
        txtBuyPrice = new javax.swing.JTextField();
        txtSellPrice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupOrder = new javax.swing.JTable();
        jXLabel10 = new org.jdesktop.swingx.JXLabel();
        txtOrderId = new javax.swing.JTextField();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jButton1 = new javax.swing.JButton();
        txtDiscount = new javax.swing.JTextField();
        cmbBatchId = new javax.swing.JComboBox<>();
        txtPayment = new javax.swing.JTextField();
        txtBalance = new org.jdesktop.swingx.JXTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jXLabel12 = new org.jdesktop.swingx.JXLabel();
        txtCash = new org.jdesktop.swingx.JXTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtGRN = new org.jdesktop.swingx.JXTextField();
        jXLabel11 = new org.jdesktop.swingx.JXLabel();
        txtAmount = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        lblUserID = new javax.swing.JLabel();
        cmbItem = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jButton3 = new javax.swing.JButton();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jXPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jXPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jXLabel4.setText("Batch ID");
        jXLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jXPanel1.add(jXLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 70, 30));

        jXLabel5.setText("Quantity");
        jXLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jXPanel1.add(jXLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 280, 70, 30));

        jXLabel6.setText("Supplier Name");
        jXLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jXPanel1.add(jXLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, 140, 30));

        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        jXPanel1.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 280, 70, 30));

        cmbSupName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSupName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSupNameItemStateChanged(evt);
            }
        });
        cmbSupName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupNameActionPerformed(evt);
            }
        });
        jXPanel1.add(cmbSupName, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 220, 150, 30));

        jXLabel7.setText("Item Code");
        jXLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jXPanel1.add(jXLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 80, 30));

        jXLabel8.setText("User ID");
        jXLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jXPanel1.add(jXLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 180, 90, 30));

        cmbSupId.setEditable(true);
        cmbSupId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSupId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSupIdItemStateChanged(evt);
            }
        });
        cmbSupId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupIdActionPerformed(evt);
            }
        });
        jXPanel1.add(cmbSupId, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 150, 30));
        jXPanel1.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 220, 150, 30));

        jXLabel9.setText("Buying Price");
        jXLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jXPanel1.add(jXLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 280, 90, 30));

        txtBuyPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuyPriceActionPerformed(evt);
            }
        });
        jXPanel1.add(txtBuyPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 280, 150, 30));

        txtSellPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSellPriceActionPerformed(evt);
            }
        });
        jXPanel1.add(txtSellPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 280, 150, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Payment");
        jXPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 580, 100, 30));

        tblSupOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier Order ID", "Item Code", "Batch ID", "Selling Price", "Buying Price", "Quantity", "Buying Amount"
            }
        ));
        jScrollPane1.setViewportView(tblSupOrder);

        jXPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 1160, 160));

        jXLabel10.setText("Date");
        jXLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jXPanel1.add(jXLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 220, 50, 30));
        jXPanel1.add(txtOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 220, 120, 30));

        jXLabel3.setText("Supplier NIC");
        jXLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jXPanel1.add(jXLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 150, 30));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/phoneshop/image/Remove.png"))); // NOI18N
        jButton1.setText("Remove Row");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jXPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 560, 210, 40));

        txtDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiscountActionPerformed(evt);
            }
        });
        jXPanel1.add(txtDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 540, 130, 30));

        cmbBatchId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbBatchIdItemStateChanged(evt);
            }
        });
        jXPanel1.add(cmbBatchId, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, 90, 30));
        jXPanel1.add(txtPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 580, 130, 30));

        txtBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalanceActionPerformed(evt);
            }
        });
        jXPanel1.add(txtBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 660, 130, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Balance");
        jXPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 660, 90, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("GRN ID");
        jXPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 500, 80, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Cash");
        jXPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 620, 60, 30));

        jXLabel12.setText("Order ID");
        jXLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jXPanel1.add(jXLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 220, 90, 30));

        txtCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCashActionPerformed(evt);
            }
        });
        jXPanel1.add(txtCash, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 620, 130, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Total Amount");
        jXPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 500, 130, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Discount");
        jXPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 540, 100, 30));
        jXPanel1.add(txtGRN, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 500, 160, 30));

        jXLabel11.setText("Selling Price");
        jXLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jXPanel1.add(jXLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 280, 90, 30));
        jXPanel1.add(txtAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 500, 130, 30));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/phoneshop/image/Change1.png"))); // NOI18N
        jButton2.setText("Create New");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jXPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 560, 200, 40));

        lblUserID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jXPanel1.add(lblUserID, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 180, 130, 30));

        cmbItem.setEditable(true);
        cmbItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemItemStateChanged(evt);
            }
        });
        cmbItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemActionPerformed(evt);
            }
        });
        cmbItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbItemKeyReleased(evt);
            }
        });
        jXPanel1.add(cmbItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, 150, 30));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jXLabel1.setText("Manage Supplier Order");
        jXLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/phoneshop/image/Change.png"))); // NOI18N
        jButton3.setText("Back");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(399, 399, 399))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jXPanel1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 1280, 100));

        jXLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jXLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 7));
        jXLabel2.setOpaque(true);
        jXPanel1.add(jXLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 1300, 660));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1399, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jXPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbSupNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSupNameActionPerformed

    private void txtBuyPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuyPriceActionPerformed
        txtSellPrice.requestFocus();
    }//GEN-LAST:event_txtBuyPriceActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //SupplierOrderDTO supplierOrderDTO=new SupplierOrderDTO();
        String supOrder = txtOrderId.getText();
        String sNic = (String) cmbSupId.getSelectedItem();
        String userId = lblUserID.getText();
        String date = txtDate.getText();
        SupplierOrderDTO supplierOrderDTO = null;

        String batchId = (String) cmbBatchId.getSelectedItem();
        String itemCode = (String) cmbItem.getSelectedItem();
        int qty = Integer.parseInt(txtQty.getText());
        double buyPrice = Double.parseDouble(txtBuyPrice.getText());
        double sellPrice = Double.parseDouble(txtSellPrice.getText());
        BatchDTO batchDTO = new BatchDTO(supOrder, batchId, itemCode, qty, buyPrice, sellPrice);
        ItemDTO itemDTO = new ItemDTO(qty);

        DefaultTableModel dtm = (DefaultTableModel) tblSupOrder.getModel();
        ArrayList<SupplierOrderDetailDTO> getSupOrder = new ArrayList<>();
        for (int i = 0; i < dtm.getRowCount(); i++) {
            String soid = (String) tblSupOrder.getValueAt(i, 0);
            String batchid = (String) tblSupOrder.getValueAt(i, 2);
            int quantity = (int) tblSupOrder.getValueAt(i, 5);
            SupplierOrderDetailDTO supplierOrderDetailDTO = new SupplierOrderDetailDTO(soid, batchid, quantity);
            getSupOrder.add(supplierOrderDetailDTO);
            supplierOrderDTO = new SupplierOrderDTO(soid, sNic, userId, date);

        }
        String grnId = txtGRN.getText();
        double payment = Double.parseDouble(txtPayment.getText());
        SupplierPaymentDTO supplierPaymentDTO = new SupplierPaymentDTO(grnId, supOrder, payment);

        try {
            //  boolean isAdded=SupplierOrderDetailController.addDetail(supplierOrderDTO,batchDTO,getSupOrder,supplierPaymentDTO);
            boolean isAdded = SupplierOrderDetailController.addDetails(supplierOrderDTO, getSupOrder, supplierPaymentDTO);
            if (isAdded) {
                boolean isUpdated = BatchController.update(batchDTO);
                if (isUpdated) {
                    String code = null;
                    boolean itemUpdate = false;
                    for (int i = 0; i < dtm.getRowCount(); i++) {
                        code = (String) dtm.getValueAt(i, 1);
                        // ItemDTO itemDTO=new ItemDTO(code); 
                        // int Qty =ManageItemController.searchQuamtity(code);
                        ArrayList<ItemDTO> itemList = ManageItemController.serchItemsQuantity(code);
                        int itemQuantity = 0;
                        for (ItemDTO itemDTO1 : itemList) {
                            itemQuantity = itemDTO1.getQtyOnHand();
                            System.out.println("QuantityOnHand" + itemQuantity);

                        }
                        itemQuantity += qty;
                        Object[] ob = {itemQuantity, code};
                        boolean isUpdateItem = ManageItemController.updateQt(ob);

                    }
                    JOptionPane.showMessageDialog(this, "Added Successfully");
                    printBill(dtm);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Added Fail");
            }

        } catch (Exception ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
//String orderId=txtOrderId.getText();
//String sNic=(String) cmbSupId.getSelectedItem();
//String itemCode=(String) cmbItem.getSelectedItem();
//String uId=txtUserId.getText();
//String date=txtDate.getText();
//ArrayList<SupplierOrderDetailDTO>orderDetailList=new ArrayList<>();
//DefaultTableModel dtm=(DefaultTableModel) tblSupOrder.getModel();
//
//for (int i = 0; i <dtm.getRowCount() ; i++) {
//    String supOrder=(String) dtm.getValueAt(i, 0);
//    int qty=(int) dtm.getValueAt(i, 5);
//    String batchId=(String) dtm.getValueAt(i,2);
//    SupplierOrderDetailDTO supplierOrderDetailDTO=new SupplierOrderDetailDTO(supOrder,qty,batchId);
//    
//    orderDetailList.add(supplierOrderDetailDTO);
//}
//SupplierOrderDTO supplierOrderDTO=new SupplierOrderDTO(orderId,sNic,uId,date,orderDetailList);
//boolean isAdded=SupplierOrderController.addSupplierOrder(supplierOrderDTO);
//if(isAdded){
//    JOptionPane.showMessageDialog(this, "Added Success");
//}
//        } catch (Exception ex) {
//            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jButton2ActionPerformed
    private void loadData() {

    }
    private void cmbSupNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSupNameItemStateChanged

    }//GEN-LAST:event_cmbSupNameItemStateChanged

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        double grandTotal = 0;
        String order = txtOrderId.getText();
        String itCode = (String) cmbItem.getSelectedItem();
        String batch = (String) cmbBatchId.getSelectedItem();
        double buyingPrice = Double.parseDouble(txtBuyPrice.getText());
        double sellingPrice = Double.parseDouble(txtSellPrice.getText());
        int qty = Integer.parseInt(txtQty.getText());
        double amount = buyingPrice * qty;
        grandTotal += amount;
        DefaultTableModel dtm = (DefaultTableModel) tblSupOrder.getModel();

        for (int i = 0; i < dtm.getRowCount(); i++) {
            String id = (String) dtm.getValueAt(i, 2);
            if (id.equals(batch)) {
                int quantity = (int) dtm.getValueAt(i, 5);
                qty += quantity;
                dtm.removeRow(i);
            }

        }
        Object[] rowData = {order, itCode, batch, buyingPrice, sellingPrice, qty, amount};
        dtm.addRow(rowData);
        txtAmount.setText("" + grandTotal);
        txtDiscount.requestFocus();


    }//GEN-LAST:event_txtQtyActionPerformed

    private void cmbSupIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupIdActionPerformed

    }//GEN-LAST:event_cmbSupIdActionPerformed

    private void cmbSupIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSupIdItemStateChanged
        try {
            // TODO add your handling code here:

            SupplierDTO supplierDTO = new SupplierDTO((String) cmbSupId.getSelectedItem());
            SupplierDTO searchName = ManageSupplierController.searchSupplier(supplierDTO);
            if (searchName != null) {
                //cmbSupName.addItem(searchName.getsName());
                cmbSupName.setSelectedItem(searchName.getsName());

            }
        } catch (Exception ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbSupIdItemStateChanged

    private void cmbItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemItemStateChanged

//        try {
//            String code = cmbItem.getSelectedItem().toString();
//            System.out.println("AAA" + code);
//            ArrayList<BatchDTO> batchLoad = BatchController.searchBatchId(code);
//            
//            cmbBatchId.removeAllItems();
//            for (BatchDTO batchDTO : batchLoad) {
//                if (batchDTO != null) {
//                    cmbBatchId.addItem(batchDTO.getBid());
//                }
//            }
//            String batch = cmbBatchId.getSelectedItem().toString();
//            BatchDTO batchDTO = BatchController.searchBatchDetails(batch);
//            if (batchDTO != null) {
//                txtBuyPrice.setText("" + batchDTO.getBuyingPrice());
//                txtSellPrice.setText("" + batchDTO.getSellingPrice());
//                txtQty.setText("" + batchDTO.getQty());
//            }
//        } catch (Exception ex) {
//            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_cmbItemItemStateChanged

    private void cmbBatchIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbBatchIdItemStateChanged
//        String batch = cmbBatchId.getSelectedItem().toString();
//        System.out.println("ssssssssssss" + batch);
//        BatchDTO batchDTO = null;
//        try {
//            batchDTO = BatchController.searchBatchDetails(batch);
//            if (batchDTO != null) {
//                txtBuyPrice.setText("" + batchDTO.getBuyingPrice());
//                txtSellPrice.setText("" + batchDTO.getSellingPrice());
//                txtQty.setText("" + batchDTO.getQty());
//            }
//        } catch (Exception ex) {
//            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
//        }
//              if(batchDTO==null){
//            return;
//        }else{

//        }
//            cmbBatchId.removeAllItems();
//            txtBuyPrice.setText(""+batch.getBuyingPrice());
//            txtSellPrice.setText(""+batch.getSellingPrice());
//            txtQty.setText(""+batch.getQty());

    }//GEN-LAST:event_cmbBatchIdItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) tblSupOrder.getModel();
        dtm.removeRow(tblSupOrder.getSelectedRow());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceActionPerformed

    private void cmbItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemActionPerformed

    }//GEN-LAST:event_cmbItemActionPerformed

    private void cmbItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbItemKeyReleased

    }//GEN-LAST:event_cmbItemKeyReleased

    private void txtDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiscountActionPerformed
        double disc = 0;
        disc += Double.parseDouble(txtDiscount.getText());
        double amount = Double.parseDouble(txtAmount.getText());
        double payment = amount - disc;
        txtPayment.setText("" + payment);
        txtCash.requestFocus();

    }//GEN-LAST:event_txtDiscountActionPerformed

    private void txtCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCashActionPerformed
        double payment = Double.parseDouble(txtPayment.getText());
        double cash = Double.parseDouble(txtCash.getText());
        double balance = cash - payment;
        txtBalance.setText("" + balance);
    }//GEN-LAST:event_txtCashActionPerformed

    private void txtSellPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSellPriceActionPerformed
       txtQty.requestFocus();
    }//GEN-LAST:event_txtSellPriceActionPerformed
    private void printBill(DefaultTableModel model) {
     /*   try {

            HashMap<String, Object> data = new HashMap<>();
            data.put("userId", txtOrderId.getText());
            data.put("orderid", txtOrderId.getText());
            data.put("SupplierNIC", cmbSupId.getSelectedItem());
            data.put("Total Amount", txtAmount.getText());
           // jasperPrint = JasperFillManager.fillReport(jasperReport, data, new JRTableModelDataSource(model));
            //jRViewer = new JRViewer(jasperPrint);

           // new JasperForm(jRViewer).setVisible(true);
        }*/
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new SupplierOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbBatchId;
    private javax.swing.JComboBox<String> cmbItem;
    private javax.swing.JComboBox<String> cmbSupId;
    private javax.swing.JComboBox<String> cmbSupName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel10;
    private org.jdesktop.swingx.JXLabel jXLabel11;
    private org.jdesktop.swingx.JXLabel jXLabel12;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXLabel jXLabel5;
    private org.jdesktop.swingx.JXLabel jXLabel6;
    private org.jdesktop.swingx.JXLabel jXLabel7;
    private org.jdesktop.swingx.JXLabel jXLabel8;
    private org.jdesktop.swingx.JXLabel jXLabel9;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JTable tblSupOrder;
    private javax.swing.JTextField txtAmount;
    private org.jdesktop.swingx.JXTextField txtBalance;
    private javax.swing.JTextField txtBuyPrice;
    private org.jdesktop.swingx.JXTextField txtCash;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDiscount;
    private org.jdesktop.swingx.JXTextField txtGRN;
    private javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtPayment;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtSellPrice;
    // End of variables declaration//GEN-END:variables

    private void getAllSupNic() {
        try {
            ArrayList<SupplierDTO> allSupplier = ManageSupplierController.getAllSupplier();
            cmbSupId.removeAllItems();
            if (allSupplier == null) {
                return;
            }
            cmbSupName.removeAll();
            for (SupplierDTO supplierDTO : allSupplier) {
                cmbSupId.addItem(supplierDTO.getsNic());

            }
        } catch (Exception ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void loadDate() {
        Date d1 = new Date();
        SimpleDateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        String date = df.format(d1);
        txtDate.setText(date);
    }

    private void getAllSupName() {
        try {
            ArrayList<SupplierDTO> allSupplier = ManageSupplierController.getAllSupplier();
            cmbSupName.removeAllItems();
            if (allSupplier == null) {
                return;
            }
            cmbSupName.removeAllItems();
            for (SupplierDTO supplierDTO : allSupplier) {
                cmbSupName.addItem(supplierDTO.getsName());

            }
        } catch (Exception ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchBatch() {
        try {
            ArrayList<BatchDTO> allBatch = BatchController.viewBatch();
            cmbBatchId.removeAllItems();
            if (allBatch == null) {
                return;
            }
            cmbBatchId.removeAllItems();
            for (BatchDTO batchDTO : allBatch) {
                cmbBatchId.addItem(batchDTO.getBid());
            }
        } catch (Exception ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void searchItem() {
        try {
            cmbItem.removeAllItems();
            ArrayList<BatchDTO> allItem = BatchController.viewBatch();
//
//            if (allItem == null) {
//                return;
//            }
            for (BatchDTO batchDTO : allItem) {
                cmbItem.addItem(batchDTO.getItemCode());
            }
        } catch (Exception ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void OrderID() {
        try {
            String orderId;
            orderId = IdGenerator.getNewID("supOrder", "soId", "SO");
            txtOrderId.setText(orderId);
        } catch (SQLException ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadBatchDetails() {
        cmbItem.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                super.keyReleased(e);
                if (!(cmbItem.getSelectedItem().toString().equals("Select"))) {
                    if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                        try {
                            String code = cmbItem.getSelectedItem().toString();

                            ArrayList<BatchDTO> batchLoad = BatchController.searchBatchId(code);

                            cmbBatchId.removeAllItems();
                            for (BatchDTO batchDTO : batchLoad) {
                                if (batchDTO != null) {
                                    cmbBatchId.addItem(batchDTO.getBid());
                                }
                            }
                            String batch = cmbBatchId.getSelectedItem().toString();
                            BatchDTO batchDTO = BatchController.searchBatchDetails(batch);
                            if (batchDTO != null) {
                                txtBuyPrice.setText("");
                                txtSellPrice.setText("");
                                txtQty.setText("");
                                txtBuyPrice.selectAll();
                                txtBuyPrice.requestFocus();
                            }
                        } catch (Exception ex) {
                            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                }
            }

        });

    }

    private void loadGRN() {
        try {
            String rgnId;
            rgnId = IdGenerator.getNewID("supplierPayment", "paymentId", "GR");
            txtGRN.setText(rgnId);
        } catch (SQLException ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SupplierOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
